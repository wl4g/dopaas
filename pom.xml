<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.wl4g</groupId>
	<artifactId>xcloud-devops</artifactId>
	<version>master</version>
	<packaging>pom</packaging>
	<name>XCloud DevSecOps</name>
	<url>https://xcloud.wl4g.com</url>
	<description>A DevSecOps solution that covers the entire software lifecycle and lightweight microservices.</description>
	<organization>
		<name>Wanglsir</name>
		<url>http://xcloud.wl4g.com</url>
	</organization>
	<licenses>
		<license>
			<name>Apache License Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:wl4g/xcloud-devops.git</connection>
		<developerConnection>scm:git:git@github.com:wl4g/xcloud-devops.git</developerConnection>
		<url>https://github.com/wl4g/xcloud-devops</url>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>github</system>
		<url>https://github.com/wl4g/xcloud/issues</url>
	</issueManagement>
	<developers>
		<developer>
			<id>Wangl01</id>
			<name>Wanglsir</name>
			<email>wanglsir@gmail.com,983708408@qq.com</email>
			<roles>
				<role>owner</role>
				<role>maintainer</role>
				<role>developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
		<developer>
			<id>xburnerair00</id>
			<name>xburnerair00</name>
			<email>xburnerair00@163.com</email>
			<roles>
				<role>maintainer</role>
				<role>developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
	</developers>
	<modules>
		<module>xcloud-devops-common</module>
		<module>xcloud-devops-ci</module>
		<module>xcloud-devops-doc</module>
		<module>xcloud-devops-erm</module>
		<!-- <module>xcloud-devops-scm</module> -->
		<!-- <module>xcloud-devops-umc</module> -->
		<module>xcloud-devops-vcs</module>
		<module>xcloud-devops-dts</module>
		<module>xcloud-devops-all-starter</module>
	</modules>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Spring's. -->
		<spring-boot.version>2.2.3.RELEASE</spring-boot.version>
		<spring-boot-admin.version>2.2.2</spring-boot-admin.version>
		<spring-boot-admin-server-ui-login.version>1.5.7</spring-boot-admin-server-ui-login.version>
		<!-- JDBC's -->
		<derby.version>10.14.2.0</derby.version>
		<hikariCP.version>3.4.5</hikariCP.version>
		<!-- Performance & quality's. -->
		<spotbugs.version>4.0.0-beta4</spotbugs.version>
		<metrics.version>3.0.2</metrics.version>
		<!-- Ssh/git & command's. -->
		<eclipse.jgit.version>5.5.1.201910021850-r</eclipse.jgit.version>
		<!-- Web tool's. -->
		<user-agent.version>1.2.4</user-agent.version>
		<httpclient.version>4.5.5</httpclient.version>
		<httpcore.version>4.4.9</httpcore.version>
		<!-- Bigdata(Hadoop). -->
		<hadoop-client.version>2.6.0</hadoop-client.version>
		<hbase.version>1.2.5</hbase.version><!-- 2.1.3 -->
		<kafka-clients.version>0.10.1.0</kafka-clients.version>
		<elasticsearch-client.version>6.2.3</elasticsearch-client.version>
		<!-- AI. -->
		<!-- NLP (pinyin) -->
		<belerweb.pinyin4j.version>2.5.1</belerweb.pinyin4j.version>
		<!-- Testing's. -->
		<junit.version>4.12</junit.version>
		<!-- 3Thirdparty's. -->
		<aliyun-sdk-dysmsapi.version>2.1.0</aliyun-sdk-dysmsapi.version>
		<aliyun-sdk-core.version>4.4.0</aliyun-sdk-core.version>
		<!-- Docker's -->
		<docker-java.version>3.1.5</docker-java.version>
		<!-- Discover's -->
		<zookeeper.version>3.4.14</zookeeper.version>
		<elastic-job.version>2.1.5</elastic-job.version>
		<curator.version>2.10.0</curator.version>
		<!-- Maven plugins -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-jar-plugin.version>2.6</maven-jar-plugin.version>
		<maven-gpg-plugin.version>1.0</maven-gpg-plugin.version>
		<maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
		<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
		<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<dockerfile-maven-plugin.version>1.4.9</dockerfile-maven-plugin.version>
		<!-- <proguard-maven-plugin.version>2.1.1</proguard-maven-plugin.version> -->
		<!-- <mybatis-generator-maven-plugin.version>1.3.2</mybatis-generator-maven-plugin.version> -->
		<nexus-staging-maven-plugin.version>1.6.3</nexus-staging-maven-plugin.version>
		<minify-maven-plugin.version>1.7.6</minify-maven-plugin.version>
		<maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
	</properties>
	<repositories>
		<repository>
			<id>aliyun-public</id>
			<name>Aliyun public</name>
			<url>https://maven.aliyun.com/repository/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/libs-snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<name>Maven Central Staging Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
	</distributionManagement>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>xcloud-components-bom</artifactId>
				<version>master</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- XCloud shell dependentcie's -->
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>xcloud-shell-common</artifactId>
				<version>2.1.1</version>
			</dependency>
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>xcloud-shell-core</artifactId>
				<version>2.1.1</version>
			</dependency>
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>xcloud-shell-springboot</artifactId>
				<version>2.1.1</version>
			</dependency>
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>xcloud-shell-cli</artifactId>
				<version>2.1.1</version>
			</dependency>
			<!-- XCloud IAM dependentcie's -->
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>xcloud-iam-client</artifactId>
				<version>master</version>
			</dependency>
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>xcloud-iam-core</artifactId>
				<version>master</version>
			</dependency>
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>xcloud-iam-service-facade</artifactId>
				<version>master</version>
			</dependency>
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>xcloud-iam-client-test</artifactId>
				<version>master</version>
				<scope>test</scope>
			</dependency>
			<!-- Spring Boot. -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Cloud. -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Hoxton.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-validator</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.validation</groupId>
						<artifactId>validation-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-redis</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<!-- Spring Boot Admin. -->
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-client</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-server</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server-ui-login</artifactId>
				<version>${spring-boot-admin-server-ui-login.version}</version>
			</dependency>
			<!-- JDBC's -->
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>${derby.version}</version>
			</dependency>
			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${hikariCP.version}</version>
			</dependency>
			<!-- Logging's. -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
			</dependency>
			<!-- Runtime's -->
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
			</dependency>
			<!-- Generic tool's. -->
			<dependency>
				<groupId>com.github.rholder</groupId>
				<artifactId>guava-retrying</artifactId>
				<version>${guava-retrying.version}</version>
			</dependency>
			<!-- Lang Utility -->
			<dependency>
				<groupId>com.typesafe</groupId>
				<artifactId>config</artifactId>
			</dependency>
			<!-- Performance & quality's. -->
			<dependency>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs</artifactId>
				<version>${spotbugs.version}</version>
			</dependency>
			<!-- Using metrics package, spring-actual will use DropwizardMetricServices implementation. -->
			<dependency>
				<groupId>com.codahale.metrics</groupId>
				<artifactId>metrics-core</artifactId>
				<version>${metrics.version}</version>
			</dependency>
			<!-- Command & ssh/git's. -->
			<dependency>
				<groupId>org.eclipse.jgit</groupId>
				<artifactId>org.eclipse.jgit</artifactId>
				<version>${eclipse.jgit.version}</version>
			</dependency>
			<!-- Web tool's. -->
			<dependency>
				<groupId>nl.bitwalker</groupId>
				<artifactId>UserAgentUtils</artifactId>
				<version>${user-agent.version}</version>
			</dependency>
			<!-- Compression's. -->
			<dependency>
				<groupId>org.xerial.snappy</groupId>
				<artifactId>snappy-java</artifactId>
			</dependency>
			<!-- Excel/word's. -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>easyexcel</artifactId>
			</dependency>
			<!-- Task scheduler's -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<exclusions>
					<exclusion>
						<groupId>c3p0</groupId>
						<artifactId>c3p0</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
			</dependency>
			<dependency>
				<groupId>io.protostuff</groupId>
				<artifactId>protostuff-core</artifactId>
			</dependency>
			<dependency>
				<groupId>io.protostuff</groupId>
				<artifactId>protostuff-runtime</artifactId>
			</dependency>
			<!-- Network & socket's. -->
			<!-- Apatche HttpClient. -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore.version}</version>
			</dependency>
			<!-- Cache/Redis's. -->
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
			</dependency>
			<!-- Bigdata/Hadoop -->
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-client</artifactId>
				<version>${hadoop-client.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-client</artifactId>
				<version>${hbase.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-server</artifactId>
				<version>${hbase.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka-clients.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elasticsearch-client.version}</version>
			</dependency>
			<!-- Note: only specified 6.2.3 can be displayed here, otherwise it will be overwritten by other dependency packages (such as spring dependency 
				BOM) -->
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch-client.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-client</artifactId>
				<version>${elasticsearch-client.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.plugin</groupId>
				<artifactId>parent-join-client</artifactId>
				<version>${elasticsearch-client.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.plugin</groupId>
				<artifactId>aggs-matrix-stats-client</artifactId>
				<version>${elasticsearch-client.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.plugin</groupId>
				<artifactId>rank-eval-client</artifactId>
				<version>${elasticsearch-client.version}</version>
			</dependency>
			<!-- AI. -->
			<!-- NLP (pinyin) -->
			<dependency>
				<groupId>com.belerweb</groupId>
				<artifactId>pinyin4j</artifactId>
			</dependency>
			<!-- Testing's. -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- 3Thirdparty's. -->
			<dependency>
				<groupId>com.aliyun</groupId>
				<artifactId>aliyun-java-sdk-dysmsapi</artifactId>
				<version>${aliyun-sdk-dysmsapi.version}</version>
			</dependency>
			<dependency>
				<groupId>com.aliyun</groupId>
				<artifactId>aliyun-java-sdk-core</artifactId>
				<version>${aliyun-sdk-core.version}</version>
			</dependency>
			<!-- Docker's. -->
			<dependency>
				<groupId>com.github.docker-java</groupId>
				<artifactId>docker-java</artifactId>
				<version>${docker-java.version}</version>
				<!-- Solve the problem that the pit cannot be read and written due to the inconsistent version of the .os local library (such as netty-transport-native-epoll) -->
				<exclusions>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-buffer</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-http</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-http2</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-common</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler-proxy</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-resolver</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-transport</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-transport-native-epoll</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-transport-native-kqueue</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-transport-native-unix-common</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Discover's -->
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>
				<optional>true</optional>
				<exclusions>
					<exclusion>
						<artifactId>log4j</artifactId>
						<groupId>log4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.dangdang</groupId>
				<artifactId>elastic-job-lite-core</artifactId>
				<version>${elastic-job.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.dangdang</groupId>
				<artifactId>elastic-job-lite-spring</artifactId>
				<version>${elastic-job.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-recipes</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>${curator.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
				</plugin>
				<!-- <plugin> -->
				<!-- <groupId>com.github.wvengen</groupId> -->
				<!-- <artifactId>proguard-maven-plugin</artifactId> -->
				<!-- <version>${proguard-maven-plugin.version}</version> -->
				<!-- </plugin> -->
				<!-- <plugin> -->
				<!-- <groupId>org.mybatis.generator</groupId> -->
				<!-- <artifactId>mybatis-generator-maven-plugin</artifactId> -->
				<!-- <version>${mybatis-generator-maven-plugin.version}</version> -->
				<!-- </plugin> -->
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.samaxes.maven</groupId>
					<artifactId>minify-maven-plugin</artifactId>
					<version>${minify-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showWarnings>true</showWarnings>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Usage: mvn versions:set -DnewVersion=latest clean install -DskipTests -->
			<!-- See: http://www.mojohaus.org/versions-maven-plugin/set-mojo.html -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<configuration>
					<!-- <newVersion>latest</newVersion> -->
					<allowSnapshots>true</allowSnapshots>
					<generateBackupPoms>false</generateBackupPoms>
					<processAllModules>true</processAllModules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<!-- <preparationGoals>clean install</preparationGoals> -->
					<!-- <developmentVersion>latest</developmentVersion> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<serverId>sonatype-nexus-staging</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!-- Source -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- GPG -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<snapshotRepository>
					<id>sonatype-nexus-snapshots</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>sonatype-nexus-staging</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
		</profile>
	</profiles>
</project>