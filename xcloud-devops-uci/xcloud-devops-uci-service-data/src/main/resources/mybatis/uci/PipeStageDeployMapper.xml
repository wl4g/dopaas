<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wl4g.devops.uci.data.PipeStageDeployDao">
	<resultMap id="BaseResultMap" type="com.wl4g.devops.common.bean.uci.PipeStageDeploy">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="pipe_id" property="pipeId" jdbcType="INTEGER" />
		<result column="deploy_type" property="deployType" jdbcType="INTEGER" />
		<result column="deploy_dockerfile_content" property="deployDockerfileContent" jdbcType="VARCHAR" />
		<result column="deploy_config_type" property="deployConfigType" jdbcType="INTEGER" />
		<result column="deploy_config_content" property="deployConfigContent" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, pipe_id, deploy_type, deploy_dockerfile_content, deploy_config_type, deploy_config_content
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from ci_pipe_step_deploy
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPipeId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from ci_pipe_step_deploy
		where pipe_id = #{pipeId,jdbcType=BIGINT} limit 1
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ci_pipe_step_deploy
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.wl4g.devops.common.bean.uci.PipeStageDeploy">
		insert into ci_pipe_step_deploy (id, pipe_id, deploy_type,
		deploy_dockerfile_content, deploy_config_type,
		deploy_config_content)
		values (#{id,jdbcType=BIGINT}, #{pipeId,jdbcType=BIGINT}, #{deployType,jdbcType=INTEGER},
		#{deployDockerfileContent,jdbcType=VARCHAR}, #{deployConfigType,jdbcType=INTEGER},
		#{deployConfigContent,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.wl4g.devops.common.bean.uci.PipeStageDeploy">
		insert into ci_pipe_step_deploy
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="pipeId != null">
				pipe_id,
			</if>
			<if test="deployType != null">
				deploy_type,
			</if>
			<if test="deployDockerfileContent != null">
				deploy_dockerfile_content,
			</if>
			<if test="deployConfigType != null">
				deploy_config_type,
			</if>
			<if test="deployConfigContent != null">
				deploy_config_content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="pipeId != null">
				#{pipeId,jdbcType=BIGINT},
			</if>
			<if test="deployType != null">
				#{deployType,jdbcType=INTEGER},
			</if>
			<if test="deployDockerfileContent != null">
				#{deployDockerfileContent,jdbcType=VARCHAR},
			</if>
			<if test="deployConfigType != null">
				#{deployConfigType,jdbcType=INTEGER},
			</if>
			<if test="deployConfigContent != null">
				#{deployConfigContent,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.wl4g.devops.common.bean.uci.PipeStageDeploy">
		update ci_pipe_step_deploy
		<set>
			<if test="pipeId != null">
				pipe_id = #{pipeId,jdbcType=BIGINT},
			</if>
			<if test="deployType != null">
				deploy_type = #{deployType,jdbcType=INTEGER},
			</if>
			<if test="deployDockerfileContent != null">
				deploy_dockerfile_content = #{deployDockerfileContent,jdbcType=VARCHAR},
			</if>
			<if test="deployConfigType != null">
				deploy_config_type = #{deployConfigType,jdbcType=INTEGER},
			</if>
			<if test="deployConfigContent != null">
				deploy_config_content = #{deployConfigContent,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wl4g.devops.common.bean.uci.PipeStageDeploy">
		update ci_pipe_step_deploy
		set pipe_id = #{pipeId,jdbcType=BIGINT},
		deploy_type = #{deployType,jdbcType=INTEGER},
		deploy_dockerfile_content = #{deployDockerfileContent,jdbcType=VARCHAR},
		deploy_config_type = #{deployConfigType,jdbcType=INTEGER},
		deploy_config_content = #{deployConfigContent,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>