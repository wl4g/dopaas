<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wl4g.devops.dao.scm.AppGroupDao">
	<sql id="allGroupColumn">
		a.id as "id",
		a.dept_id as "deptId",
		a.name as "name",
		a.enable as "enable",
		a.remark as "remark",
		a.create_by as "createBy",
		a.create_date as "createDate",
		a.update_by as "updateBy",
		a.update_date as "updateDate",
		a.del_flag as "delFlag"
	</sql>
	
	<sql id="allInstanceColumn">
		i.id as "i.id",
		i.group_id as "i.groupId",
		i.enable as "i.enable",
		i.`host` as "i.host",
		i.`ip` as "i.ip",
		i.`port` as "i.port",
		i.ops_ids as "i.opsIds",
		i.remark as "i.remark",
		i.create_by as "i.createBy",
		i.create_date as "i.createDate",
		i.update_by as "i.updateBy",
		i.update_date as "i.updateDate",
		i.del_flag as "i.delFlag",
		i.env_id as "i.envId"
	</sql>

	<sql id="allEnvColumn">
		e.id as "e.id",
		e.group_id as "e.groupId",
		e.remark as "e.remark",
		e.name as "e.name",
		e.create_by as "e.createBy",
		e.create_date as "e.createDate",
		e.update_by as "e.updateBy",
		e.update_date as "e.updateDate",
		e.del_flag as "e.delFlag"
	</sql>
	
	<resultMap type="instanceOfGroup" id="queryInstanceOfGroup">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="deptId" property="deptId" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="enable" property="enable" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="createBy" property="createBy" jdbcType="INTEGER" />
		<result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
		<result column="updateBy" property="updateBy" jdbcType="INTEGER" />
		<result column="updateDate" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="delFlag" property="delFlag" jdbcType="INTEGER" />
		<collection property="appInstance" ofType="appInstance" javaType="list">
			<result column="i.id" property="id" jdbcType="INTEGER" />
			<result column="i.groupId" property="groupId" jdbcType="INTEGER" />
			<result column="i.enable" property="enable" jdbcType="INTEGER" />
			<result column="i.host" property="host" jdbcType="VARCHAR" />
			<result column="i.ip" property="ip" jdbcType="VARCHAR" />
			<result column="i.port" property="port" jdbcType="INTEGER" />
			<result column="i.ops_ids" property="opsIds" jdbcType="VARCHAR" />
			<result column="i.remark" property="remark" jdbcType="VARCHAR" />
			<result column="i.createBy" property="createBy" jdbcType="INTEGER" />
			<result column="i.createDate" property="createDate" jdbcType="TIMESTAMP" />
			<result column="i.updateBy" property="updateBy" jdbcType="INTEGER" />
			<result column="i.updateDate" property="updateDate" jdbcType="TIMESTAMP" />
			<result column="i.delFlag" property="delFlag" jdbcType="INTEGER" />
			<result column="i.envId" property="envId" jdbcType="VARCHAR" />
			<result column="i.sshUser" property="sshUser" jdbcType="VARCHAR" />
			<result column="i.sshKey" property="sshKey" jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<resultMap type="instanceOfGroup" id="queryEnvGroup">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="deptId" property="deptId" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="enable" property="enable" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="createBy" property="createBy" jdbcType="INTEGER" />
		<result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
		<result column="updateBy" property="updateBy" jdbcType="INTEGER" />
		<result column="updateDate" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="delFlag" property="delFlag" jdbcType="INTEGER" />
		<collection property="environment" ofType="environment" javaType="list">
			<result column="e.id" property="id" jdbcType="INTEGER" />
			<result column="e.groupId" property="groupId" jdbcType="INTEGER" />
			<result column="e.remark" property="remark" jdbcType="VARCHAR" />
			<result column="e.createBy" property="createBy" jdbcType="INTEGER" />
			<result column="e.createDate" property="createDate" jdbcType="TIMESTAMP" />
			<result column="e.updateBy" property="updateBy" jdbcType="INTEGER" />
			<result column="e.updateDate" property="updateDate" jdbcType="TIMESTAMP" />
			<result column="e.delFlag" property="delFlag" jdbcType="INTEGER" />
			<result column="e.name" property="name" jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<select id="groupEnvlist" parameterType="appGroupList" resultType="appGroupList">
		select
		COUNT(0) as instanceCount,
		<include refid="allGroupColumn"/>
		from
		app_cluster a
		JOIN app_environment b on a.id = b.group_id AND b.del_flag = #{DEL_FLAG_NORMAL}
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				and a.name like CONCAT('%',#{name},'%')
			</if>
		</where>
		GROUP by a.id
	</select>

	<select id="list" parameterType="appGroupList" resultType="appGroupList">
		select
		COUNT(0) as instanceCount,
		b.name as "evnname",
		<include refid="allGroupColumn"/>
		from
		app_cluster a
		JOIN app_environment b on b.group_id=a.id AND b.del_flag = #{DEL_FLAG_NORMAL}
		JOIN app_instance f ON f.group_id = a.id AND f.env_id = b.id AND f.del_flag = #{DEL_FLAG_NORMAL}
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				and a.id = #{name}
			</if>
		</where>
		GROUP BY a.id,b.id
	</select>


	<insert id ="insertInstance" parameterType="instanceOfGroup" >
		insert into app_instance
		(group_id, `enable`, `host`, `ip`, `port`, ops_ids, remark, create_by, create_date, update_by, update_date, env_id)
		values
		<foreach collection ="appInstance" item="instance" index= "index" separator =",">
			(
			#{id},
			#{instance.enable},
			#{instance.host},
			#{instance.ip},
			#{instance.port},
			#{instance.opsIds},
			#{instance.remark},
			#{createBy},
			#{createDate},
			#{updateBy},
			#{updateDate},
			#{envId}
			)
		</foreach >
	</insert >

	<insert id ="insertEnvironment" parameterType="instanceOfGroup" >
		insert into app_environment
		(group_id, `name`, remark, create_by, create_date, update_by, update_date)
		values
		<foreach collection ="environment" item="env" index= "index" separator =",">
			(
			#{id},
			#{env.name},
			#{env.remark},
			#{createBy},
			#{createDate},
			#{updateBy},
			#{updateDate}
			)
		</foreach >
	</insert >

	<update id="updateInstance" parameterType="appInstance">
		update app_instance
		<set>
			<if test="groupId != null">
				group_id = #{groupId},
			</if>
			<if test="enable != null">
				enable = #{enable},
			</if>
			<if test="host != null and host != ''">
				`host` = #{host},
			</if>
			<if test="ip != null and ip != ''">
				`ip` = #{ip},
			</if>
			<if test="port != null and port != ''">
				`port` = #{port},
			</if>
			<if test="opsIds != null and opsIds != ''">
				ops_ids = #{opsIds},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>
			<if test="envId != null">
				env_id = #{envId}
			</if>
		</set>
		where id = #{id}
	</update>

	<update id="updateEnvironment" parameterType="environment">
		update app_environment
		<set>
			<if test="groupId != null">
				group_id = #{groupId},
			</if>
			<if test="name != null and name != ''">
				`name` = #{name},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>
		</set>
		where id = #{id}
	</update>

	<insert id="insert" parameterType="instanceOfGroup" useGeneratedKeys="true" keyProperty="id">
		insert into app_cluster
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="deptId != null">
				dept_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="enable != null">
				enable,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="deptId != null">
				#{deptId},
			</if>
			<if test="name != null">
				#{name},
			</if>
			<if test="enable != null">
				#{enable},
			</if>
			<if test="remark != null">
				#{remark},
			</if>
			<if test="createBy != null">
				#{createBy},
			</if>
			<if test="createDate != null">
				#{createDate},
			</if>
			<if test="updateBy != null">
				#{updateBy},
			</if>
			<if test="updateDate != null">
				#{updateDate},
			</if>
		</trim>
	</insert>
	
	<update id="delete" parameterType="appCluster">
		update app_cluster
		<set>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>
				del_flag = #{DEL_FLAG_DELETE}
		</set>
		where id = #{id} 
	</update>
	
	<update id="update" parameterType="appCluster">
		update app_cluster
		<set>
			<if test="deptId != null">
				dept_id = #{deptId},
			</if>
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="enable != null">
				enable = #{enable},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate}
			</if>
		</set>
		where id = #{id}
	</update>
	
	<select id="select" parameterType="appCluster" resultMap="queryInstanceOfGroup">
		select
		<include refid="allInstanceColumn"/>,
		<include refid="allGroupColumn"/>
		from
		app_cluster a
		LEFT JOIN app_instance i ON a.id = i.group_id and i.del_flag = #{DEL_FLAG_NORMAL}
		where
		a.del_flag = #{DEL_FLAG_NORMAL}
		and a.id = #{id}
	</select>

	<select id="selectEnv" parameterType="appCluster" resultMap="queryEnvGroup">
		select
		<include refid="allEnvColumn"/>,
		<include refid="allGroupColumn"/>
		from
		app_cluster a
		LEFT JOIN app_environment e ON a.id = e.group_id and e.del_flag = #{DEL_FLAG_NORMAL}
		where
		a.del_flag = #{DEL_FLAG_NORMAL}
		and a.id = #{id}
	</select>

	<select id="grouplist"  resultType="appCluster">
		select
		a.name,a.id,a.enable
		from
		app_cluster a
		<where>
			a.del_flag = 0
		</where>
	</select>

	<select id="environmentlist" parameterType="java.lang.String" resultType="environment">
		select
			a.name,a.id,a.group_id as "groupId",a.remark
		FROM
			app_environment a
		<where>
		a.del_flag = 0
		<if test="groupId != null and groupId != ''">
			and a.group_id=#{groupId}
		</if>
		</where>
	</select>

	<select id="instancelist" parameterType="appInstance" resultType="appInstance">
		select a.remark,a.id,a.group_id as "groupId",a.env_id as "envId",a.host,a.ip,a.port FROM  app_instance a
		<where>
			a.del_flag = 0
			<if test="envId != null and envId != ''">
				and a.env_id=#{envId}
			</if>
			<if test="groupId != null and groupId != ''">
				and a.group_id=#{groupId}
			</if>
			<if test="ip != null and ip != ''">
				and a.ip=#{ip}
			</if>
			<if test="port != null and port != ''">
				and a.port=#{port}
			</if>
		</where>
	</select>
     <!-- 通過節點ID直接查詢節點 -->
     	<select id="getAppInstance" parameterType="java.lang.String" resultType="appInstance">
		select a.remark,a.id,a.group_id as "groupId",a.env_id as "envId",a.host,a.port,a.version_id as "versionId",a.ssh_user as "sshUser",a.ssh_key as "sshKey" FROM  app_instance a
		<where>
			a.del_flag = 0
			<if test="id != null and id != ''">
				and a.id=#{id}
			</if>
		</where>
	</select>
     <update id="deleteInstance" parameterType="appInstance">
		update app_instance
		<set>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>
			del_flag = #{DEL_FLAG_DELETE}
		</set>
		where id = #{id} 
	</update>

	<update id="deleteEnv" parameterType="environment">
		update app_environment
		<set>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>
			del_flag = #{DEL_FLAG_DELETE}
		</set>
		where id = #{id}
	</update>

	<!-- Get application environment -->
	<select id="selectEnvName" parameterType="java.lang.String"  resultType="java.lang.String">
		select a.name FROM app_environment a
		<where>
		a.del_flag = 0
		<if test="envId != null and envId != ''">
			and a.id=#{envId}
		</if>
		</where>
	</select>

	<!-- Get application group -->
	<select id="getAppGroup" resultType="appCluster">
		select a.* FROM app_cluster a
		<where>
		a.del_flag = 0
		<if test="id != null and id != 0">
			and a.id=#{id}
		</if>
		<if test="id == null or id == 0">
			and a.id=-1
		</if>
			limit 1
		</where>
	</select>

	<select id="getAppGroupByName" resultType="appCluster">
		select a.* FROM app_cluster a
		<where>
			a.del_flag = 0
			<if test="name != null and name != ''">
				and a.name=#{name}
			</if>
		</where>
		limit 1
	</select>
</mapper>