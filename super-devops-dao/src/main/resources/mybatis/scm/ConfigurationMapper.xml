<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wl4g.devops.dao.scm.ConfigurationDao">
	<sql id="allVersionColumn">
		a.id as "id",
		a.sign as "sign",
		a.sign_type as "signtype",
		a.tag as "tag",
		a.remark as "remark",
		a.create_by as "createBy",
		a.create_date as "createDate",
		a.del_flag as "delFlag"
	</sql>

	<sql id="allVersionDetailColumn">
		vd.id as "id",
		vd.version_id as "versionId",
		vd.type as "type",
		vd.content as "content",
		vd.remark as "remark",
		(SELECT d.`value` FROM sys_dict d WHERE d.key=vd.namespace_id) as "namespace",
		vd.namespace_id as "namespaceId"
	</sql>

	<resultMap id="queryVersion" type="configVersionList">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="sign" property="sign" jdbcType="VARCHAR"/>
		<result column="sign_type" property="signtype" jdbcType="VARCHAR"/>
		<result column="tag" property="tag" jdbcType="INTEGER"/>
		<result column="name" property="groupName" jdbcType="VARCHAR"/>
		<result column="host" property="host" jdbcType="VARCHAR"/>
		<result column="create_by" property="createBy" jdbcType="INTEGER"/>
		<result column="create_date" property="createDate" jdbcType="VARCHAR"/>
		<result column="del_flag" property="delFlag" jdbcType="INTEGER"/>
		<result column="envRemark" property="envRemark" jdbcType="VARCHAR"/>
	</resultMap>

	<resultMap id="configSourceMap" type="configSourceBean">
		<association property="releaseMeta" javaType="configReleaseMeta">
			<result column="releaseId" property="releaseId"/>
			<result column="version" property="version"/>
		</association>
		<collection property="contents" ofType="versionContentBean">
			<result column="namespace" property="namespace" />
			<result column="namespaceId" property="namespace_id" />
			<result column="type" property="type" />
			<result column="content" property="content" />
			<result column="createDate" property="createDate" />
		</collection>
	</resultMap>

	<!--添加版本 -->
	<insert id="insert" parameterType="versionOfDetail" useGeneratedKeys="true" keyProperty="id">
		insert into scm_version
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="sign != null">
				sign,
			</if>
			<if test="signtype != null">
				sign_type,
			</if>
			<if test="tag != null">
				tag,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="sign != null">
				#{sign},
			</if>
			<if test="signtype != null">
				#{signtype},
			</if>
			<if test="tag != null">
				#{tag},
			</if>
			<if test="remark != null">
				#{remark},
			</if>
			<if test="createBy != null">
				#{createBy},
			</if>
			<if test="createDate != null">
				#{createDate}
			</if>
		</trim>
	</insert>
	<insert id ="insertDetail" parameterType="java.util.Map" >
		insert into scm_version_detail
		(version_id, `type`, content, remark, namespace_id)
		values
		<foreach collection ="configGurations" item="detail" index= "index" separator =",">
			(
			#{vid},
			#{detail.type},
			#{detail.content},
			#{detail.remark},
			#{detail.namespaceId}
			)
		</foreach >
	</insert>

	<update id="updateNode" parameterType="java.util.Map">
		UPDATE app_instance a
		<set>
			<if test="vid != null and vid != ''">
				version_id = #{vid},
			</if>
			<if test="updateDate != null and updateDate != ''">
				update_date = #{updateDate},
			</if>
			<if test="updateBy != null and updateBy != ''">
				update_by = #{updateBy},
			</if>
		</set>
		WHERE
		a.id = #{nodeid}
	</update>

	<select id="nodeIsVersion" parameterType="java.util.Map" resultType="string">
		SELECT version_id FROM  app_instance
		WHERE
		<if test="nodeid != null and nodeid != ''">
			id = #{nodeid}
		</if>
		AND
		<if test="envid != null and envid != ''">
			env_id = #{envid}
		</if>
	</select>

	<update id="update" parameterType="versionOfDetail">
		update scm_version
		<set>
			<if test="status != null and status != ''">
				status = #{status},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark},
			</if>
			<if test="createBy != null and createBy != ''">
				create_by = #{createBy},
			</if>
			<if test="createDate != null">
				create_date = #{createDate},
			</if>
			<if test="appClusterId != null and appClusterId != ''">
				cluster_id = #{appClusterId},
			</if>
			<if test="instanceId != null and instanceId != ''">
				instance_id = #{instanceId},
			</if>
		</set>
		where id = #{id}
	</update>

	<!--查询版本详情 -->
	<select id="selectVersion" resultType="versionContentBean">
		SELECT
		<include refid="allVersionDetailColumn"/>
		from
			scm_version_detail vd
		where
			vd.version_id = #{id}
	</select>

	<select id="list" resultMap="queryVersion">
		SELECT
			a.*,
			h.`hostname` as host,
			b.`endpoint` as port,
			b.id as nodeId,
			c.`name`,
			c.id as appClusterId,
			d.`remark` as envRemark,
			d.id as envId
		FROM scm_version a
		JOIN app_instance b ON a.id = b.version_id
		left join app_host h on h.id=b.host_id
		JOIN app_cluster c ON b.cluster_id = c.id
		JOIN app_environment d ON b.env_id = d.id and d.cluster_id = c.id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND c.del_flag = #{DEL_FLAG_NORMAL}
			AND d.del_flag = #{DEL_FLAG_NORMAL}
			<if test="appClusterId != null and appClusterId != ''">
				AND c.id = #{appClusterId}
			</if>
			<if test="instanceId != null and instanceId != ''">
				AND b.id = #{instanceId}
			</if>
			<if test="envId != null and envId != ''">
				AND d.id = #{envId}
			</if>
		</where>
	</select>

	<delete id="deleteConfigGuration" parameterType="java.util.Map">
		delete from scm_version_detail
		where id = #{id}
	</delete>

	<update id="updateGuration" parameterType="versionContentBean">
		update scm_version_detail
		<set>
			<if test="versionId != null and versionId != ''">
				version_id = #{versionId},
			</if>
			<if test="key != null and key != ''">
				`type` = #{type},
			</if>
			<if test="value != null and value != ''">
				content = #{content},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark}
			</if>
		</set>
		where id = #{id}
	</update>

	<!-- Client拉取版本配置信息，若releaseMeta.releaseId或releaseMeta.version为空，则使用默认最新
		发布的配置(条件：同一实例同一版本号下的scm_release_history.create_date最大)，场景：client启动时拉取配置
	-->
	<select id="findSource" resultMap="configSourceMap">
		SELECT
			rh.id AS "releaseId",
			i.version_id AS "version",
			sd.`id` AS "namespace_id",
			sd.`value` AS "namespace",
			vd.type AS "type",
			vd.content AS "content",
			rh.create_date AS "createDate"
		FROM
			scm_release_detail rd
		INNER JOIN scm_release_history rh ON rh.id = rd.release_id
		INNER JOIN app_instance i ON i.id = rd.instance_id
		INNER JOIN app_environment e ON e.id = i.env_id
		INNER JOIN app_cluster g ON g.id = i.cluster_id
		INNER JOIN scm_version_detail vd ON vd.version_id = i.version_id
		INNER JOIN sys_dict sd ON sd.id = vd.namespace_id
		<where>
			AND g.`name` = #{group}

			<if test="namespaces != null"><![CDATA[ AND sd.`value` IN ]]>
				<foreach item="item" index="index" collection="namespaces" open="(" separator="," close=")">#{item}
				</foreach>
			</if>

			<if test="meta != null
				and meta.releaseId != null and meta.releaseId != 'null' and meta.releaseId != ''
				and meta.version != null and meta.version != 'null' and meta.version != ''">

				AND rh.id = #{meta.releaseId}
				AND rh.version_id = #{meta.version}
			</if>
			<if test="instance != null">
				AND i.`host` = #{instance.host}
				AND i.`port` = #{instance.port}
			</if>
		</where>
		ORDER BY rh.create_date DESC
		LIMIT 1 <!-- 取创建时间最大 -->
	</select>

	<!-- 更新发布client返回结果 -->
	<update id="updateReleaseDetail">
		UPDATE scm_release_detail rd
		INNER JOIN app_instance i ON i.id = rd.instance_id
		<set>
			rd.result = #{detailsJSONString},
			rd.status = #{status.value},
			rd.description = #{description}
		</set>
		<where>
			<!-- 条件: 所属实例、所属版本、所属发布ID -->
			<if test="instance != null">
				AND i.`host` = #{instance.host}
				AND i.`port` = #{instance.port}
			</if>
			<if test="meta.version != null and meta.version != ''">
				AND i.version_id = #{meta.version}
			</if>
			<if test="meta.releaseId != null and meta.releaseId != ''">
				AND rd.release_id = #{meta.releaseId}
			</if>
		</where>
	</update>
</mapper>