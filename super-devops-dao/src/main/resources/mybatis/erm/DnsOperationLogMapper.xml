<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wl4g.devops.dao.erm.DnsOperationLogDao" >
  <resultMap id="BaseResultMap" type="com.wl4g.devops.common.bean.erm.DnsOperationLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="zone_type" property="zoneType" jdbcType="INTEGER" />
    <result column="domain" property="domain" jdbcType="VARCHAR" />
    <result column="oper_date" property="operDate" jdbcType="TIMESTAMP" />
    <result column="oper_by" property="operBy" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, zone_type, domain, oper_date, oper_by, description, result
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from erm_dns_operation_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from erm_dns_operation_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wl4g.devops.common.bean.erm.DnsOperationLog" >
    insert into erm_dns_operation_log (id, zone_type, domain, 
      oper_date, oper_by, description, 
      result)
    values (#{id,jdbcType=INTEGER}, #{zoneType,jdbcType=INTEGER}, #{domain,jdbcType=VARCHAR}, 
      #{operDate,jdbcType=TIMESTAMP}, #{operBy,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{result,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wl4g.devops.common.bean.erm.DnsOperationLog" >
    insert into erm_dns_operation_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="zoneType != null" >
        zone_type,
      </if>
      <if test="domain != null" >
        domain,
      </if>
      <if test="operDate != null" >
        oper_date,
      </if>
      <if test="operBy != null" >
        oper_by,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="result != null" >
        result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="zoneType != null" >
        #{zoneType,jdbcType=INTEGER},
      </if>
      <if test="domain != null" >
        #{domain,jdbcType=VARCHAR},
      </if>
      <if test="operDate != null" >
        #{operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operBy != null" >
        #{operBy,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wl4g.devops.common.bean.erm.DnsOperationLog" >
    update erm_dns_operation_log
    <set >
      <if test="zoneType != null" >
        zone_type = #{zoneType,jdbcType=INTEGER},
      </if>
      <if test="domain != null" >
        domain = #{domain,jdbcType=VARCHAR},
      </if>
      <if test="operDate != null" >
        oper_date = #{operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operBy != null" >
        oper_by = #{operBy,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wl4g.devops.common.bean.erm.DnsOperationLog" >
    update erm_dns_operation_log
    set zone_type = #{zoneType,jdbcType=INTEGER},
      domain = #{domain,jdbcType=VARCHAR},
      oper_date = #{operDate,jdbcType=TIMESTAMP},
      oper_by = #{operBy,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>