<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wl4g.devops.dao.umc.AlarmRecordDao" >
  <resultMap id="BaseResultMap" type="com.wl4g.devops.common.bean.umc.AlarmRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="template_id" property="templateId" jdbcType="INTEGER" />
    <result column="notification_id" property="notificationId" jdbcType="INTEGER" />
    <result column="gather_time" property="gatherTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="alarm_type" property="alarmType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, template_id,notification_id, gather_time, create_time, alarm_type
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from umc_alarm_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from umc_alarm_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wl4g.devops.common.bean.umc.AlarmRecord" >
    insert into umc_alarm_record (id, name, template_id, notification_id,
      gather_time, create_time,
      alarm_type)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{templateId,jdbcType=INTEGER}, #{notificationId,jdbcType=INTEGER},
      #{gatherTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},
      #{alarmType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wl4g.devops.common.bean.umc.AlarmRecord" useGeneratedKeys="true" keyProperty="id">
    insert into umc_alarm_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="templateId != null" >
        template_id,
      </if>
      <if test="notificationId != null" >
        notification_id,
      </if>
      <if test="gatherTime != null" >
        gather_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="alarmType != null" >
        alarm_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        #{templateId,jdbcType=INTEGER},
      </if>
      <if test="notificationId != null" >
        #{notificationId,jdbcType=INTEGER},
      </if>
      <if test="gatherTime != null" >
        #{gatherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alarmType != null" >
        #{alarmType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wl4g.devops.common.bean.umc.AlarmRecord" >
    update umc_alarm_record
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        template_id = #{templateId,jdbcType=INTEGER},
      </if>
      <if test="notificationId != null" >
        notification_id = #{notificationId,jdbcType=INTEGER},
      </if>
      <if test="gatherTime != null" >
        gather_time = #{gatherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alarmType != null" >
        alarm_type = #{alarmType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wl4g.devops.common.bean.umc.AlarmRecord" >
    update umc_alarm_record
    set name = #{name,jdbcType=VARCHAR},
      template_id = #{templateId,jdbcType=INTEGER},
      notification_id = #{notificationId,jdbcType=INTEGER},
      gather_time = #{gatherTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      alarm_type = #{alarmType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="list" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from umc_alarm_record
    where 1=1
    <if test="name != null and name != ''" >
      AND name LIKE CONCAT('%','${name}','%')
    </if>
    <if test="startDate!=null and startDate!='' and endDate!='' and endDate !=null">
      AND DATE_FORMAT(create_time,'%Y-%m-%d %H:%i') &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d %H:%i')
      AND DATE_FORMAT(create_time,'%Y-%m-%d %H:%i') &lt; DATE_FORMAT(#{endDate},'%Y-%m-%d %H:%i')
    </if>
    order by create_time desc
  </select>

</mapper>