// Generated by XCloud DevOps for Codegen, refer: http://dts.devops.wl4g.com

/*
 * Copyright 2017 ~ 2025 the original author or authors. <wanglsir@gmail.com, 983708408@qq.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.wl4g.devops.doc.controller;

import com.wl4g.components.common.web.rest.RespBase;
import com.wl4g.components.core.bean.doc.EnterpriseDocument;
import com.wl4g.components.core.web.BaseController;
import com.wl4g.components.data.page.PageModel;
import com.wl4g.devops.doc.enterprise.EnterpriseDocumentService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import static org.springframework.web.bind.annotation.RequestMethod.*;

/**
* {@link EnterpriseDocument}
*
* @author root
* @version master
* @Date 
* @since v1.0
*/
@RestController
@RequestMapping("/enterprisedocument")
public class EnterpriseDocumentController extends BaseController {

    @Autowired
    private EnterpriseDocumentService enterpriseDocumentService;

    @RequestMapping(value = "/list", method = { GET })
    public RespBase<PageModel<EnterpriseDocument>> list(PageModel<EnterpriseDocument> pm, EnterpriseDocument enterpriseDocument) {
        RespBase<PageModel<EnterpriseDocument>> resp = RespBase.create();
        resp.setData(enterpriseDocumentService.page(pm, enterpriseDocument));
        return resp;
    }

    @RequestMapping(value = "/save", method = { POST, PUT })
    public RespBase<?> save(@RequestBody EnterpriseDocument enterpriseDocument) {
        RespBase<Object> resp = RespBase.create();
        enterpriseDocumentService.save(enterpriseDocument);
        return resp;
    }

    @RequestMapping(value = "/detail", method = { GET })
    public RespBase<EnterpriseDocument> detail(@RequestParam(required = true) Long id) {
        RespBase<EnterpriseDocument> resp = RespBase.create();
        resp.setData(enterpriseDocumentService.detail(id));
        return resp;
    }

    @RequestMapping(value = "/del", method = { POST, DELETE })
    public RespBase<?> del(@RequestParam(required = true) Long id) {
        RespBase<Object> resp = RespBase.create();
        enterpriseDocumentService.del(id);
        return resp;
    }

}
